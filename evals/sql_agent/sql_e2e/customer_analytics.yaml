suite_name: "Customer Analytics"
suite_description: "Tests for customer-related analytics and reporting"
default_judge_criteria:
  accuracy_threshold: 8.0
  relevance_threshold: 9.0
  completeness_threshold: 8.0
  hallucination_threshold: 9.0
  require_exact_match: true

tests:
  - name: "top_customers_by_order_count"
    question: "Which 20 customers have placed the most orders?"
    sql: |
      SELECT
        c.company_name,
        COUNT(o.order_id) as order_count
      FROM customers c
      JOIN orders o ON c.customer_id = o.customer_id
      GROUP BY c.customer_id, c.company_name
      ORDER BY order_count DESC
      LIMIT 20;
    tags: ["aggregation", "join", "ordering", "limit", "customers"]

  - name: "customers_exceeding_credit_limit"
    question: "Which customers have orders with a total amount exceeding their credit limit?"
    sql: |
      SELECT
        c.customer_id,
        c.company_name,
        c.credit_limit,
        SUM(o.grand_total_amount) AS total_order_amount
      FROM customers c
      JOIN orders o ON c.customer_id = o.customer_id
      WHERE o.status NOT IN ('cancelled', 'refunded')
      GROUP BY c.customer_id, c.company_name, c.credit_limit
      HAVING SUM(o.grand_total_amount) > c.credit_limit;
    tags: ["aggregation", "join", "having", "filtering", "customers"]

  - name: "top_customers_current_year"
    question: "Find the top 5 customers by total order amount this year"
    sql: |
      SELECT
        c.customer_id,
        c.company_name,
        SUM(o.grand_total_amount) as total_order_amount
      FROM customers c
      JOIN orders o ON c.customer_id = o.customer_id
      WHERE EXTRACT(YEAR FROM o.order_date) = EXTRACT(YEAR FROM CURRENT_DATE)
      GROUP BY c.customer_id, c.company_name
      ORDER BY total_order_amount DESC
      LIMIT 5;
    tags: ["aggregation", "join", "date_functions", "ordering", "limit", "customers"]
    judge_criteria:
      accuracy_threshold: 7.0
